=== modified file 'CMakeLists.txt'
--- CMakeLists.txt	2016-09-26 13:07:01 +0000
+++ CMakeLists.txt	2016-09-29 07:13:11 +0000
@@ -19,7 +19,7 @@
 add_definitions (-DI_KNOW_THE_PACKAGEKIT_GLIB2_API_IS_SUBJECT_TO_CHANGE)
 
 find_package (PkgConfig)
-pkg_check_modules (DEPS REQUIRED gthread-2.0 gee-0.8 gtk+-3.0>=3.10 granite packagekit-glib2 appstream>=0.9.0)
+pkg_check_modules (DEPS REQUIRED gthread-2.0 gee-0.8 gtk+-3.0>=3.10 granite packagekit-glib2 appstream>=0.10.0)
 
 add_definitions (${DEPS_CFLAGS})
 link_directories (${DEPS_LIBRARY_DIRS})

=== modified file 'src/Core/Client.vala'
--- src/Core/Client.vala	2016-09-24 01:53:02 +0000
+++ src/Core/Client.vala	2016-09-29 07:13:11 +0000
@@ -26,22 +26,18 @@
     private Gee.LinkedList<AppCenter.Task> task_list;
     private Gee.LinkedList<AppCenter.Task> task_with_agreement_list;
     private Gee.HashMap<string, AppCenterCore.Package> package_list;
-    private AppStream.Database appstream_database;
+    private AppStream.Pool appstream_pool;
     public GLib.Cancellable interface_cancellable;
     private GLib.DateTime last_cache_update;
     private uint updates_number = 0U;
 
     private Client () {
-        try {
-            appstream_database.get_all_components ().foreach ((comp) => {
-                var package = new AppCenterCore.Package (comp);
-                foreach (var pkg_name in comp.get_pkgnames ()) {
-                    package_list.set (pkg_name, package);
-                }
-            });
-        } catch (Error e) {
-            error (e.message);
-        }
+        appstream_pool.get_components ().foreach ((comp) => {
+            var package = new AppCenterCore.Package (comp);
+            foreach (var pkg_name in comp.get_pkgnames ()) {
+                package_list.set (pkg_name, package);
+            }
+        });
     }
 
     construct {
@@ -50,9 +46,9 @@
         package_list = new Gee.HashMap<string, AppCenterCore.Package> (null, null);
         interface_cancellable = new GLib.Cancellable ();
 
-        appstream_database = new AppStream.Database ();
+        appstream_pool = new AppStream.Pool ();
         try {
-            appstream_database.open ();
+            appstream_pool.load ();
         } catch (Error e) {
             error (e.message);
         }
@@ -97,16 +93,6 @@
         }
     }
 
-    public AppStream.Component? get_extension (string extension) throws GLib.Error {
-        try {
-            return appstream_database.get_component_by_id (extension); 
-        } catch (Error e) {
-            warning ("%s\n", e.message);
-        }
-        
-        return null;
-    }
-
     public async Pk.Exit install_package (Package package, Pk.ProgressCallback cb, GLib.Cancellable cancellable) throws GLib.Error {
         Pk.Exit exit_status = Pk.Exit.UNKNOWN;
         AppCenter.Task install_task = request_task ();
@@ -272,50 +258,28 @@
     }
 
     public Gee.Collection<AppCenterCore.Package> get_applications_for_category (AppStream.Category category) {
+        unowned GLib.GenericArray<AppStream.Component> components = category.get_components ();
+        if (components.length == 0) {
+            var category_array = new GLib.GenericArray<AppStream.Category> ();
+            category_array.add (category);
+            AppStream.utils_sort_components_into_categories (appstream_pool.get_components (), category_array, true);
+            components = category.get_components ();
+        }
+
         var apps = new Gee.TreeSet<AppCenterCore.Package> ();
-        string categories = get_string_from_categories (category);
-        try {
-            var comps = appstream_database.find_components (null, categories);
-            comps.foreach ((comp) => {
-                apps.add (package_list.get (comp.get_pkgnames ()[0]));
-            });
-        } catch (Error e) {
-            critical (e.message);
-        }
+        components.foreach ((comp) => {
+            apps.add (package_list.get (comp.get_pkgnames ()[0]));
+        });
 
         return apps;
     }
 
-    private string get_string_from_categories (AppStream.Category category) {
-        string categories = "";
-        unowned Gee.LinkedList<string> categories_list = category.get_data<Gee.LinkedList> ("categories");
-        foreach (var cat in categories_list) {
-            if (categories != "") {
-                categories += ";" + cat.down ();
-            } else {
-                categories = cat.down ();
-            }
-        }
-
-        category.get_subcategories ().foreach ((cat) => {
-            if (!(cat.name in categories)) {
-                categories += ";" + get_string_from_categories (cat);
-            }
-        });
-
-        return categories;
-    }
-
     public Gee.Collection<AppCenterCore.Package> search_applications (string query) {
         var apps = new Gee.TreeSet<AppCenterCore.Package> ();
-        try {
-            var comps = appstream_database.find_components (query, null);
-            comps.foreach ((comp) => {
-                apps.add (package_list.get (comp.get_pkgnames ()[0]));
-            });
-        } catch (Error e) {
-            critical (e.message);
-        }
+        GLib.GenericArray<weak AppStream.Component> comps = appstream_pool.search (query);
+        comps.foreach ((comp) => {
+            apps.add (package_list.get (comp.get_pkgnames ()[0]));
+        });
 
         return apps;
     }

=== modified file 'src/Views/AppInfoView.vala'
--- src/Views/AppInfoView.vala	2016-09-08 09:52:03 +0000
+++ src/Views/AppInfoView.vala	2016-09-29 07:13:11 +0000
@@ -121,7 +121,7 @@
 
             parse_description (package.component.get_description ());
 
-            if (package.component.get_extensions ().length > 0) {
+            if (package.component.get_addons ().length > 0) {
                 extension_box = new Gtk.ListBox ();
                 extension_box.selection_mode = Gtk.SelectionMode.NONE;
 
@@ -141,17 +141,10 @@
         }
 
         private async void load_extensions () {
-            package.component.get_extensions ().@foreach ((cid) => {
-                try {
-                    var extension = AppCenterCore.Client.get_default ().get_extension (cid);
-                    if (extension != null) {
-                        var row = new Widgets.PackageRow (new AppCenterCore.Package (extension), null, false);
-                        if (extension_box != null) {
-                            extension_box.add (row);
-                        }
-                    }
-                } catch (Error e) {
-                    warning ("%s\n", e.message);
+            package.component.get_addons ().@foreach ((extension) => {
+                var row = new Widgets.PackageRow (new AppCenterCore.Package (extension), null, false);
+                if (extension_box != null) {
+                    extension_box.add (row);
                 }
             });
         }
@@ -231,7 +224,11 @@
 
         private void parse_description (string? description) {
             if (description != null) {
-                app_description.buffer.text = AppStream.description_markup_convert_simple (description);
+                try {
+                    app_description.buffer.text = AppStream.markup_convert_simple (description);
+                } catch (Error e) {
+                    critical (e.message);
+                }
             }
         }
     }

=== modified file 'src/Views/CategoryView.vala'
--- src/Views/CategoryView.vala	2016-09-07 18:38:31 +0000
+++ src/Views/CategoryView.vala	2016-09-29 07:13:11 +0000
@@ -117,9 +117,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Audio"));
         category.set_icon ("applications-audio-symbolic");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Audio");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Audio");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("audio");
 
@@ -129,10 +127,8 @@
     private Widgets.CategoryItem get_development_category () {
         var category = new AppStream.Category ();
         category.set_name (_("Development"));
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Development");
-        categories.add ("IDE");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Development");
+        category.add_desktop_group ("IDE");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("development");
 
@@ -143,9 +139,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Accessories"));
         category.set_icon ("applications-accessories");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Utility");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Utility");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("accessories");
 
@@ -156,9 +150,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Office"));
         category.set_icon ("applications-office-symbolic");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Office");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Office");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("office");
 
@@ -169,9 +161,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("System"));
         category.set_icon ("applications-system");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("System");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("System");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("system");
 
@@ -182,9 +172,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Video"));
         category.set_icon ("applications-video-symbolic");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Video");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Video");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("video");
 
@@ -194,9 +182,7 @@
     private Widgets.CategoryItem get_graphics_category () {
         var category = new AppStream.Category ();
         category.set_name (_("Graphics"));
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Graphics");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Graphics");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("graphics");
 
@@ -206,9 +192,7 @@
     private Widgets.CategoryItem get_games_category () {
         var category = new AppStream.Category ();
         category.set_name (_("Games"));
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Game");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Game");
         category.set_icon ("applications-games-symbolic");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("games");
@@ -219,9 +203,7 @@
     private Widgets.CategoryItem get_education_category () {
         var category = new AppStream.Category ();
         category.set_name (_("Education"));
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Education");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Education");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("education");
 
@@ -232,9 +214,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Internet"));
         category.set_icon ("applications-internet");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Network");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Network");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("internet");
 
@@ -244,9 +224,7 @@
     private Widgets.CategoryItem get_science_category () {
         var category = new AppStream.Category ();
         category.set_name (_("Science & Engineering"));
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Science");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Science");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("science");
 
@@ -257,9 +235,7 @@
         var category = new AppStream.Category ();
         category.set_name (_("Universal Access"));
         category.set_icon ("applications-accessibility-symbolic");
-        var categories = new Gee.LinkedList<string> ();
-        categories.add ("Accessibility");
-        category.set_data<Gee.LinkedList> ("categories", categories);
+        category.add_desktop_group ("Accessibility");
         var item = new Widgets.CategoryItem (category);
         item.add_category_class ("accessibility");
 

